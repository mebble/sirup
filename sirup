#!/usr/bin/python3

import json
import nav
import git
from shell import get_cmd

def summarise(repos_dir, should_log=False):
    repos = []
    for repo in nav.explore_repos(repos_dir):
        if should_log:
            print(f'Checking repo: {repo}')
        git_info = {
            'name': repo,
            'is_clean': git.is_clean(),
            'current_branch': {
                'local_branch': git.get_local_branch(),
                **git.remote_branch_status()
            },
            'remotes': git.get_remotes()
        }
        repos.append(git_info)
    return repos

def generate(json_path, output_path):
    pass

usage_instructions = '''
Usage: ./sirup sum --repos ./path/to/repos
Flags:
    --log\tWill output logs to stdout
'''.strip()

if __name__ == '__main__':
    cmd, success = get_cmd()
    if not success:
        print(usage_instructions)
        exit(1)

    if cmd['name'] == 'sum':
        repos_path = cmd['args']['--repos']
        should_log = cmd['flags']['--log']
        summary = summarise(repos_path, should_log)
        json_output = json.dumps(summary)
        print(json_output)
        exit(0)

    if cmd['name'] == 'gen':
        json_path = cmd['args']['--from']
        output_path = cmd['args']['--to']
        success, err_message = generate(json_path, output_path)
        if not success:
            print(err_message)
            exit(1)
        exit(0)

    print('This command is not yet implemented')
